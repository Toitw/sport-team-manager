modules = ["nodejs-20", "web", "postgresql-16"]
run = "npm run dev:server"
hidden = [".config", ".git", "generated-icon.png", "node_modules", "dist"]

[nix]
channel = "stable-24_05"

[env]
NODE_ENV = "development"

[deployment]
deploymentTarget = "cloudrun"
build = ["npm", "run", "build"]
run = ["sh", "-c", "PORT=3000 tsx watch --clear-screen=false server/index.ts"]

[languages]
[languages.typescript]
pattern = "**/{*.ts,*.js,*.tsx,*.jsx}"
syntax = "typescript"

[languages.typescript.languageServer]
start = "typescript-language-server --stdio"

[unitTest]
language = "nodejs"

[gitHubImport]
requiredFiles = [".replit", "replit.nix", ".config"]

[[ports]]
localPort = 80
externalPort = 80

[[ports]]
localPort = 3000
externalPort = 3000

[[ports]]
localPort = 5173
externalPort = 5173

[[ports]]
localPort = 5174
externalPort = 3001

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Frontend Server"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Backend Server"

[[workflows.workflow]]
name = "Frontend Server"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd client && npm run dev"
waitForPort = 5173

[[workflows.workflow]]
name = "Backend Server"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "PORT=3000 tsx watch --clear-screen=false server/index.ts"
waitForPort = 3000
